import pickle

class Personnel(object):
	"""Class for the personnel at the sandbox, and can be used to autorize access to the printer usage"""
	def __init__(self, name, pin):
		"""
		Args:
			name: str
				The name of the Personnel, saved for security reasons

			pin: int
				The password pin of the indiviual. This is hashed using a md5 algorithm and is used to compared with
		"""
		self.personnel_name = name
		self.pin = self._getHash(pin)
		self._save()

	def _save(self):
		"""
		Saving the Personnel information for later usage
		"""
		open('Personnel Info.csv', 'a').write(str(self) + '\n')
		with open('Personnel Info.txt', 'ab') as f:
			pickle.dump(self, f)

	def __str__(self):
		"""
		magic function to convert the Personnel Object to a string
		"""
		return f'{self.personnel_name}, {self.pin}'

	def __repr__(self):
		"""
		magic function to represent the Personnel Object
		"""
		return f'{self.personnel_name}, {self.pin}'

	def __eq__(self, pin: int):
		"""
		Function to check if the pin matches the pin of this object
		"""
		if not isinstance(pin, int):
			raise TypeError("Expected int, got", type(pin))

		else:
			return (self.pin == self._getHash(pin))

	def _getHash(self, pin):
		import hashlib
		"""
		Function used to return hash generated by the pin

		Args:
			pin :int
				The pin that the user has given
		"""
		pin = str(pin).encode('utf-8')
		hashVal = hashlib.md5(pin).hexdigest()

		return hashVal


def main():
	"""
	Main function:
		Checking if Personnel class is functioning properly
			Creating two distinct objects and checking if their pins are the same or not

	This will be later converted to unit tests

	"""
	test_Personnel_name = 'John Wick'
	test_Personnel_pin  = 1300135			#Yes, it's immature, but growing up is for old people
	p = Personnel(test_Personnel_name, test_Personnel_pin)

	test_Personnel_name = 'Alan Wolf'
	test_Personnel_pin  = 1300134
	p1 = Personnel(test_Personnel_name, test_Personnel_pin)
	print('------------------Creation test complete!----------------\n')


	print(p)
	print(str(p))
	print(p.pin == p1.pin)
	print (p == 1300135)
	print('------------------magic function test complete!----------\n')


	f = open('Personnel Info.txt', 'rb')
	te = pickle.load(f)
	print(te)
	te2 = pickle.load(f)
	print(te2)
	print('------------------file management test complete!---------\n')

if __name__ == '__main__':
	main()